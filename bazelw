#!/bin/bash

set -euo pipefail

readonly bazelisk_version="1.27.0"

if [[ $OSTYPE == darwin* ]]; then
  readonly bazel_os="darwin"
else
  readonly bazel_os="linux"
fi

readonly raw_arch="$(uname -m)"
if [[ "$raw_arch" == "aarch64" || "$raw_arch" == "arm64" ]]; then
  readonly bazel_arch="arm64"
else
  readonly bazel_arch="amd64"
fi

bazel_platform="$bazel_os-$bazel_arch"
case "$bazel_platform" in
  darwin-arm64)
    readonly bazel_version_sha="b13dd89c6ecd90944ca3539f5a2c715a18f69b7458878c471a902a8e482ceb4b"
    ;;
  darwin-amd64)
    readonly bazel_version_sha="0af019eeb642fa70744419d02aa32df55e6e7a084105d49fb26801a660aa56d3"
    ;;
  linux-arm64)
    readonly bazel_version_sha="4c8d966e40ac2c4efcc7f1a5a5cceef2c0a2f16b957e791fa7a867cce31e8fcb"
    ;;
  linux-amd64)
    readonly bazel_version_sha="fd8fdff418a1758887520fa42da7e6ae39aefc788cf5e7f7bb8db6934d279fc4"
    ;;

  *)
    echo "Unsupported platform $OSTYPE $raw_arch" >&2
    exit 1
esac

readonly bazel_version_url="https://github.com/bazelbuild/bazelisk/releases/download/v$bazelisk_version/bazelisk-$bazel_platform"
script_root="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly bazelisk="$script_root/tmp/bazel/versions/bazelisk-$bazelisk_version-$bazel_platform"

if [[ ! -x "$bazelisk" ]]; then
  echo "Installing bazelisk..." >&2
  mkdir -p "$(dirname "$bazelisk")"

  download_bazelisk() {
    curl --fail -L --retry 5 --retry-connrefused --silent --progress-bar \
      --output "$bazelisk" "$bazel_version_url"
  }

  download_bazelisk || download_bazelisk
  if echo "$bazel_version_sha  $bazelisk" | shasum --check --status; then
    chmod +x "$bazelisk"
  else
    echo "Bazelisk sha mismatch" >&2
    rm -f "$bazelisk"
    exit 1
  fi
fi

exec ./tools/android_sdk_wrapper.sh "$bazelisk" "$@"
