#!/bin/bash

set -euo pipefail

readonly bazelisk_version="1.27.0"

if [[ $OSTYPE == darwin* ]]; then
  readonly bazel_os="darwin"
else
  readonly bazel_os="linux"
fi

readonly raw_arch="$(uname -m)"
if [[ "$raw_arch" == "aarch64" || "$raw_arch" == "arm64" ]]; then
  readonly bazel_arch="arm64"
else
  readonly bazel_arch="amd64"
fi

bazel_platform="$bazel_os-$bazel_arch"
case "$bazel_platform" in
darwin-arm64)
  readonly bazel_version_sha="8bf08c894ccc19ef37f286e58184c3942c58cb08da955e990522703526ddb720"
  ;;
darwin-amd64)
  readonly bazel_version_sha="8fcd7ba828f673ba4b1529425e01e15ac42599ef566c17f320d8cbfe7b96a167"
  ;;
linux-arm64)
  readonly bazel_version_sha="bb608519a440d45d10304eb684a73a2b6bb7699c5b0e5434361661b25f113a5d"
  ;;
linux-amd64)
  readonly bazel_version_sha="e1508323f347ad1465a887bc5d2bfb91cffc232d11e8e997b623227c6b32fb76"
  ;;

*)
  echo "Unsupported platform $OSTYPE $raw_arch" >&2
  exit 1
  ;;
esac

readonly bazel_version_url="https://github.com/bazelbuild/bazelisk/releases/download/v$bazelisk_version/bazelisk-$bazel_platform"
script_root="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly bazelisk="$script_root/tmp/bazel/versions/bazelisk-$bazelisk_version-$bazel_platform"

if [[ ! -x "$bazelisk" ]]; then
  echo "Installing bazelisk..." >&2
  mkdir -p "$(dirname "$bazelisk")"

  download_bazelisk() {
    curl --fail -L --retry 5 --retry-connrefused --silent --progress-bar \
      --output "$bazelisk" "$bazel_version_url"
  }

  download_bazelisk || download_bazelisk
  if echo "$bazel_version_sha  $bazelisk" | shasum --check --status; then
    chmod +x "$bazelisk"
  else
    echo "Bazelisk sha mismatch" >&2
    rm -f "$bazelisk"
    exit 1
  fi
fi

exec ./tools/android_sdk_wrapper.sh "$bazelisk" "$@"
