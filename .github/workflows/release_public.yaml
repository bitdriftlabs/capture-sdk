name: Release to dl.bitdrift.io
on:
  workflow_call:
    inputs:
      version:
        description: 'The GitHub release to release publicly on dl.bitdrift.io, ex: 0.9.102'
        required: true
        type: string
      emergency:
        type: boolean
        description: Ignore main branch requirement (SOC2 compliance)
        required: true
      publish_to_maven_central:
        type: boolean
        description: Also upload generated bundles to Maven Central (Central Portal)
        required: false
        default: false
  workflow_dispatch:
    inputs:
      version:
        description: 'The GitHub release to release publicly on dl.bitdrift.io, ex: 0.9.102. It should *NOT* be prefixed with "v"'
        required: true
        type: string
      emergency:
        type: boolean
        description: Ignore main branch requirement (SOC2 compliance)
        required: true
      publish_to_maven_central:
        type: boolean
        description: Also upload generated bundles to Maven Central (Central Portal)
        required: false
        default: false
jobs:
  release-ios:
    name: Upload iOS artifacts to dl.bitdrift.io
    permissions:
      id-token: write # required to use OIDC authentication
      contents: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: SOC2 Compliance
      run: |
        if [ "${{ github.event.inputs.emergency }}" == "true" ]; then
          echo "Using emergency override"
          curl -X POST -H 'Content-type: application/json' \
            --data '{"blocks": [{"type": "section", "text": {"type": "mrkdwn", "text": ":cop: :rotating_light: <https://github.com/${{github.actor}}|${{github.actor}}> is trying to deploy <https://github.com/${{github.repository}}/commits/${{github.sha}}|this commit> from <https://github.com/${{github.repository}}|${{github.repository}}>. Please respond on this thread with the justification and approval."}}]}' \
            '${{ secrets.DEPLOY_SLACK_WEBHOOK_AUDIT_BOT }}'
          exit 0
        fi
        if [ "${{ github.ref }}" != "refs/heads/main" ]; then
          echo "Only main branch may be released to prod"
          echo "Use emergency mode if you must deploy from another branch"
          exit 1
        fi
    - name: Setup AWS credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
      with:
        role-to-assume: arn:aws:iam::750483288132:role/terraform-bitdriftlabs-capture-sdk-oidc
        aws-region: us-east-1
    - name: Download GH Release iOS artifacts
      run: gh release download "v$VERSION" -p 'Capture*.ios.zip'
      env:
        VERSION: ${{ inputs.version }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload iOS Artifacts to aws bucket
      run: ./ci/capture_ios_release.sh "$VERSION"
      env:
        VERSION: ${{ inputs.version }}
  release-android:
    name: Upload Android artifacts to dl.bitdrift.io
    permissions:
      id-token: write # required to use OIDC authentication (set up aws credentials)
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: SOC2 Compliance
      run: |
        if [ "${{ github.event.inputs.emergency }}" == "true" ]; then
          echo "Using emergency override"
          curl -X POST -H 'Content-type: application/json' \
            --data '{"blocks": [{"type": "section", "text": {"type": "mrkdwn", "text": ":cop: :rotating_light: <https://github.com/${{github.actor}}|${{github.actor}}> is trying to deploy <https://github.com/${{github.repository}}/commits/${{github.sha}}|this commit> from <https://github.com/${{github.repository}}|${{github.repository}}>. Please respond on this thread with the justification and approval."}}]}' \
            '${{ secrets.DEPLOY_SLACK_WEBHOOK_AUDIT_BOT }}'
          exit 0
        fi
        if [ "${{ github.ref }}" != "refs/heads/main" ]; then
          echo "Only main branch may be released to prod"
          echo "Use emergency mode if you must deploy from another branch"
          exit 1
        fi
    - name: Setup AWS credentials
      uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
      with:
        role-to-assume: arn:aws:iam::750483288132:role/terraform-bitdriftlabs-capture-sdk-oidc
        aws-region: us-east-1
    - name: Download GH Release Android artifacts
      run: |
        gh release download "v$VERSION" -p 'Capture*.android.zip'
        gh release download "v$VERSION" -p 'capture-timber*.android.zip'
        gh release download "v$VERSION" -p 'capture-apollo*.android.zip'
        gh release download "v$VERSION" -p 'capture-plugin*.android.zip'
      env:
        VERSION: ${{ inputs.version }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload Android Artifacts to aws bucket and prepare Maven Central bundles
      env:
        # Enable Maven Central bundles; script will skip if signing key isn't provided
        MAKE_MAVEN_CENTRAL_BUNDLES: "true"
        # GPG signing configuration (existing repo/org secrets)
        GPG_PRIVATE_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_SIGNING_KEY_PASSPHRASE }}
      run: ./ci/capture_android_release.sh ${{ inputs.version }} "Capture-${{ inputs.version }}.android.zip" "capture-timber-${{ inputs.version }}.android.zip" "capture-apollo-${{ inputs.version }}.android.zip" "capture-plugin-${{ inputs.version }}.android.zip" "capture-plugin-marker-${{ inputs.version }}.android.zip"
    - name: Upload Maven Central bundles as GitHub Release assets
      if: always()
      env:
        VERSION: ${{ inputs.version }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        set -euo pipefail
        if compgen -G "dist/maven-central/*.{zip,tar.gz}" > /dev/null; then
          echo "Uploading Maven Central bundles to GitHub Release v$VERSION"
          gh release upload "v$VERSION" dist/maven-central/*.{zip,tar.gz} --clobber || \
            gh release upload "v$VERSION" dist/maven-central/*.zip --clobber || true
        else
          echo "No Maven Central bundles found; skipping upload."
        fi
    - name: Upload bundles to Maven Central (Central Portal)
      if: ${{ inputs.publish_to_maven_central == true }}
      env:
        MAVEN_CENTRAL_TOKEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_TOKEN_USERNAME }}
        MAVEN_CENTRAL_TOKEN_PASSWORD: ${{ secrets.MAVEN_CENTRAL_TOKEN_PASSWORD }}
      run: |
        set -euo pipefail
        if [[ -z "${MAVEN_CENTRAL_TOKEN_USERNAME:-}" || -z "${MAVEN_CENTRAL_TOKEN_PASSWORD:-}" ]]; then
          echo "Maven Central tokens not provided; skipping upload."
          exit 0
        fi
        if [[ ! -d dist/maven-central ]]; then
          echo "No Maven Central bundles directory found; skipping."
          exit 0
        fi
        cd dist/maven-central
        shopt -s nullglob
        bundles=( io.bitdrift-*.maven-central.zip *.maven-central.zip )
        shopt -u nullglob
        if (( ${#bundles[@]} == 0 )); then
          echo "No bundle zips found to upload."
          exit 0
        fi
        for b in "${bundles[@]}"; do
          [[ -f "$b" ]] || continue
          echo "Uploading $b to Sonatype Central Portal..."
          curl -sS -u "${MAVEN_CENTRAL_TOKEN_USERNAME}:${MAVEN_CENTRAL_TOKEN_PASSWORD}" \
            -F "bundle=@${b}" \
            https://central.sonatype.com/api/v1/publisher/upload | tee /dev/stderr
        done

