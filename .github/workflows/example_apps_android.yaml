env:
  NDK_VERSION: 27.2.12479018

name: Build Android example apps
on:
  workflow_dispatch:
    inputs:
      sha:
        description: '[Optional] Commit SHA1, branch or tag to build. The latest SHA1 on a given branch is used if no value is provided.'
        required: false
        type: string
  workflow_call:
    inputs:
      sha:
        description: '[Optional] Commit SHA1, branch or tag to build. The latest SHA1 on a given branch is used if no value is provided.'
        required: false
        type: string

jobs:
  print_arguments:
    name: Print arguments
    runs-on: ubuntu-latest
    steps:
      - name: Print entered "sha"
        run: echo "$SHA"
    env:
      SHA: ${{ inputs.sha }}

  build:
    name: Build & upload
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project sources
      uses: actions/checkout@v4

    - name: Install JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: gradle
    - name: Cache Android NDK
      id: ndk-cache
      uses: actions/cache@v4
      with:
        path: ${{ env.ANDROID_SDK_ROOT }}/ndk/${{ env.NDK_VERSION }}
        key: ${{ runner.os }}-android-ndk-${{ env.NDK_VERSION }}
    - name: Verify cmdline-tools
      run: |
        CMDLINE_TOOLS_DIR="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin"
        if [ ! -x "$CMDLINE_TOOLS_DIR/sdkmanager" ]; then
          echo "cmdline-tools not found or incomplete. Installing..."
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdline-tools.zip
          unzip -q cmdline-tools.zip
          mv cmdline-tools latest
        else
          echo "cmdline-tools already installed."
        fi
    - name: Install Android NDK
      if: steps.ndk-cache.outputs.cache-hit != 'true'
      run: |
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
        yes | sdkmanager "ndk;${NDK_VERSION}"

    - name: Install Rust target
      run: rustup update && rustup target add aarch64-linux-android && rustup target add x86_64-linux-android
    - name: Build Android example app
      run: ./ci/prepare_example_apps_android.sh
      env:
        SKIP_PROTO_GEN: 1
    - name: Upload Android example apps
      uses: actions/upload-artifact@v4
      with:
        name: Android Example Apps
        path: ./dist/example-apps.android.zip
        if-no-files-found: error
